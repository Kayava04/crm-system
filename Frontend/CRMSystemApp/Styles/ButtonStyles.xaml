<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--// Minimize Button Style \\-->
    <Style x:Key="MinimizeStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="–"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource PhotoTextBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">

                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Fullscreen Button Style \\-->
    <Style x:Key="FullscreenStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="🗖"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource PhotoTextBrush}"/>
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">

                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Close Button Style \\-->
    <Style x:Key="CloseStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="✕"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource PhotoTextBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="0,20,0,0"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">

                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CloseButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Close Button for Fullscreen Style \\-->
    <Style x:Key="CloseFullscreenStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="✕"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">

                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CloseButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Home Button Style \\-->
    <Style x:Key="HomeStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="7"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Home_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Account Button Style \\-->
    <Style x:Key="AccountStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="7"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Account_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Settings Button Style \\-->
    <Style x:Key="SettingsStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="7"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Settings_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Switch Theme Toggle Button Style \\-->
    <Style x:Key="SwitchThemeStyle" TargetType="{x:Type ToggleButton}">

        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Background" Value="{DynamicResource SwitchToggleBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SwitchToggleBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Grid>

                        <!--// Background \\-->
                        <Border x:Name="SwitchBorder"
                            CornerRadius="22.5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"/>

                        <!--// Icons Under The Knob \\-->
                        <Grid>

                            <Image
                                Source="/Images/Sun.png"
                                Width="32"
                                Height="32"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Margin="8,0,0,0"
                                RenderOptions.BitmapScalingMode="Fant"
                                SnapsToDevicePixels="True"/>

                            <Image
                                Source="/Images/Moon.png"
                                Width="32"
                                Height="32"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                Margin="0,0,8,0"
                                RenderOptions.BitmapScalingMode="Fant"
                                SnapsToDevicePixels="True"/>

                        </Grid>

                        <!-- Toggle Circle ON TOP -->
                        <Ellipse x:Name="SwitchKnob"
                             Width="32"
                             Height="32"
                             Fill="White"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Left"
                             Margin="6,0"
                             SnapsToDevicePixels="True">

                            <Ellipse.RenderTransform>
                                <TranslateTransform x:Name="KnobTransform" />
                            </Ellipse.RenderTransform>

                        </Ellipse>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>

                                        <DoubleAnimation
                                            Storyboard.TargetName="KnobTransform"
                                            Storyboard.TargetProperty="X"
                                            To="36"
                                            Duration="0:0:0.2"/>

                                        <ColorAnimation
                                            Storyboard.TargetName="SwitchBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#011207"
                                            Duration="0:0:0.2"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>

                                        <DoubleAnimation
                                            Storyboard.TargetName="KnobTransform"
                                            Storyboard.TargetProperty="X"
                                            To="0"
                                            Duration="0:0:0.2"/>

                                        <ColorAnimation
                                            Storyboard.TargetName="SwitchBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#B4B4B4"
                                            Duration="0:0:0.2"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Toggle Button Style \\-->
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">

        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Background" Value="#ccc"/>
        <Setter Property="BorderBrush" Value="#999"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Grid>

                        <Border x:Name="SwitchBorder"
                            CornerRadius="17"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"/>

                        <Ellipse x:Name="SwitchKnob"
                            Width="27"
                            Height="27"
                            Fill="White"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Margin="4,0"
                            SnapsToDevicePixels="True">

                            <Ellipse.RenderTransform>
                                <TranslateTransform x:Name="KnobTransform" />
                            </Ellipse.RenderTransform>

                        </Ellipse>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>

                                        <DoubleAnimation
                                            Storyboard.TargetName="KnobTransform"
                                            Storyboard.TargetProperty="X"
                                            To="26"
                                            Duration="0:0:0.2"/>

                                        <ColorAnimation
                                            Storyboard.TargetName="SwitchBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#4CD964"
                                            Duration="0:0:0.2"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>

                                        <DoubleAnimation
                                            Storyboard.TargetName="KnobTransform"
                                            Storyboard.TargetProperty="X"
                                            To="0"
                                            Duration="0:0:0.2"/>

                                        <ColorAnimation
                                            Storyboard.TargetName="SwitchBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#ccc"
                                            Duration="0:0:0.2"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Students Button Style \\-->
    <Style x:Key="StudentsStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="10"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Students_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Employees Button Style \\-->
    <Style x:Key="EmployeesStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="10"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Employees_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Schedule Button Style \\-->
    <Style x:Key="ScheduleStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="10"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Schedule_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Email Button Style \\-->
    <Style x:Key="EmailStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="10"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Email_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Reports Button Style \\-->
    <Style x:Key="ReportsStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="10"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Reports_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Salary Button Style \\-->
    <Style x:Key="SalaryStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="10"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Salary_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Calendar Button Style \\-->
    <Style x:Key="CalendarStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="10"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Calendar_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Task Manager Button Style \\-->
    <Style x:Key="TaskManagerStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="10"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/TaskManager_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// About Button Style \\-->
    <Style x:Key="AboutStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="55"/>
        <Setter Property="Width" Value="55"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="10"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/About_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Back Button Style \\-->
    <Style x:Key="BackStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="{DynamicResource BackButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BackButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="3"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Back_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Add Button Style \\-->
    <Style x:Key="AddStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="7"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Add_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Edit Button Style \\-->
    <Style x:Key="EditStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="3"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Edit_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Remove Button Style \\-->
    <Style x:Key="RemoveStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="{DynamicResource LogoutBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LogoutBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="3"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Remove_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource LogoutHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Import Button Style \\-->
    <Style x:Key="ImportStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Content" Value="Import"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource RegisterLoginForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Export Button Style \\-->
    <Style x:Key="ExportStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Content" Value="Export"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource RegisterLoginForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                    CornerRadius="7"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    SnapsToDevicePixels="True">

                        <ContentControl
                        Content="{TemplateBinding Content}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Upload Button Style \\-->
    <Style x:Key="UploadStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="3"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Upload_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Change Password Button Style \\-->
    <Style x:Key="ChangePasswordStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="3"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/ResetPassword_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Save Button Style \\-->
    <Style x:Key="SaveStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="3"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Save_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Confirm Button Style \\-->
    <Style x:Key="ConfirmStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="3"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Confirm_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Register Button Style \\-->
    <Style x:Key="RegisterStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Content" Value="Register"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource RegisterLoginForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource RegisterLoginBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RegisterLoginBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource RegisterLoginHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Save Creating & Editing Button Style \\-->
    <Style x:Key="SaveButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Content" Value="Save"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource RegisterLoginForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource RegisterLoginBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RegisterLoginBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource RegisterLoginHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Cancel Creating & Editing Button Style \\-->
    <Style x:Key="CancelButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Content" Value="Cancel"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource RegisterLoginForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource LogoutBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LogoutBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource LogoutHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Send Email Button Style \\-->
    <Style x:Key="SendStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Padding="3"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">

                            <Image
                                Source="/Images/Send_Green.png"
                                RenderOptions.BitmapScalingMode="Fant"/>

                        </ContentControl>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Login Button Style \\-->
    <Style x:Key="LoginStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Content" Value="Login"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource RegisterLoginForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource RegisterLoginBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RegisterLoginBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource RegisterLoginHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--// Logout Button Style \\-->
    <Style x:Key="LogoutStyle" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Content" Value="Logout"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource LogoutForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource LogoutBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource LogoutBorderBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        CornerRadius="7"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="True">

                        <ContentControl
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource LogoutHoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>